openapi: 3.0.0
info:
  title: Shop APIs.
  description: |-
    - Customer APIs
      - show all Customers
      - create new Customer
      - update Customer info.
      - delete Customer
    - Item APIs
      - show all Items
      - create new Item
      - update Item info.
      - delete Item
    - Order APIs
      - show all Orders
      - create new Order
      - update Order info.
      - delete Order      
    - Bill APIs
      - show all Bills
      - create new Bill
      - update Bill info.
      - delete Bill
  contact:
    name: 'Eyab Ghifari'
    email: eyab.m.g@gmail.com
  version: 0.1.9
tags:
  - name: Customer
    description: Everything about Customer
  - name: Item
    description: Everything about Item
  - name: Order
    description: Everything about Order
  - name: Bill
    description: Everything about Bill
paths:
  #custmoer APIs
  /customer:
    get:
      tags:
        - Customer
      summary: Returns a list of all Customers.
      operationId: controllers.customer_api.get_customer
      responses:
        '200':
          description: A JSON array of Customers info.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customer_info'
        '204':
          description: No Content
        '400':
          description: Error Bad Request
    post:
      tags:
        - Customer
      summary: Creates a Customer.
      operationId: controllers.customer_api.post_customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_info'

      responses:
        '201':
          description: Created Successfully
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/customer_info'
        '400':
          description: Error Bad Request
  /customer/{customer_id}:
    get:
      tags:
        - Customer
      summary: Returns a Customer by ID.
      operationId: controllers.customer_api.show_customer_info
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/customer_info'
        '404':
          description: Customer Not Found
        '400':
          description: Error Bad Request
    put:
      tags:
        - Customer
      summary: update info of an Customer.
      operationId: controllers.customer_api.update_customer_info
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer_info'
      responses:
        '201':
          description: Updated Successfully
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/customer_info'
        '404':
          description: Customer Not Found
        '400':
          description: Error Bad Request
    delete:
      tags:
        - Customer
      summary: delete an Customer by ID.
      operationId: controllers.customer_api.delete_customer_info
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Deleted Successfully
        '404':
          description: Customer Not Found
        '400':
          description: Error Bad Request
  # item APIs
  /item:
    get:
      tags:
        - Item
      summary: Returns a list of all Items.
      operationId: controllers.item_api.get_items
      responses:
        '200':
          description: A JSON array of Items info.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item_info'
        '204':
          description: No Content
        '400':
          description: Error Bad Request
    post:
      tags:
        - Item
      summary: Creates an Item.
      operationId: controllers.item_api.post_item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item_info'

      responses:
        '201':
          description: Created Successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item_info'
        '400':
          description: Error Bad Request
  /item/{item_id}:
    get:
      tags:
        - Item
      summary: Returns a Item by ID.
      operationId: controllers.item_api.show_item_info
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/item_info'
        '404':
          description: Item Not Found
        '400':
          description: Error Bad Request
    put:
      summary: update info of an Item.
      operationId: controllers.item_api.update_item_info
      tags:
        - Item
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item_info'
      responses:
        '201':
          description: Updated Successfully
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/item_info'
        '404':
          description: Item Not Found
        '400':
          description: Error Bad Request
    delete:
      summary: delete an Item by ID.
      operationId: controllers.item_api.delete_item_info
      tags:
        - Item
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Deleted Successfully
        '404':
          description: Item Not Found
        '400':
          description: Error Bad Request
  # Order APIs
  /order:
    get:
      tags:
        - Order
      summary: Returns a list of all Orders.
      operationId: controllers.order_api.get_orders
      responses:
        '200':
          description: A JSON array of Orders info.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order_info'
        '204':
          description: No Content
        '400':
          description: Error Bad Request
    post:
      tags:
        - Order
      summary: Creates an Order.
      operationId: controllers.order_api.post_order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_info'

      responses:
        '201':
          description: Created Successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order_info'
        '400':
          description: Error Bad Request
  /order/{order_id}:
    get:
      tags:
        - Order
      summary: Returns a Order by ID.
      operationId: controllers.order_api.show_order_info
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/order_info'
        '404':
          description: Order Not Found
        '400':
          description: Error Bad Request
    put:
      summary: update info of an Order.
      operationId: controllers.order_api.update_order_info
      tags:
        - Order
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order_info'
      responses:
        '201':
          description: Updated Successfully
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/order_info'
        '404':
          description: Order Not Found
        '400':
          description: Error Bad Request
    delete:
      summary: delete an Order by ID.
      operationId: controllers.order_api.delete_order_info
      tags:
        - Order
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Deleted Successfully
        '404':
          description: Order Not Found
        '400':
          description: Error Bad Request
  # Bill APIs
  /bill:
    get:
      tags:
        - Bill
      summary: Returns a list of all Bills.
      operationId: controllers.bill_api.get_bills
      responses:
        '200':
          description: A JSON array of bills info.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/bill_info'
        '204':
          description: No Content
        '400':
          description: Error Bad Request
    post:
      tags:
        - Bill
      summary: Creates an bill.
      operationId: controllers.bill_api.post_bill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bill_info'

      responses:
        '201':
          description: Created Successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/bill_info'
        '400':
          description: Error Bad Request
  /bill/{bill_id}:
    get:
      tags:
        - Bill
      summary: Returns a bill by ID.
      operationId: controllers.bill_api.show_bill_info
      parameters:
        - name: bill_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/bill_info'
        '404':
          description: Bill Not Found
        '400':
          description: Error Bad Request
    put:
      summary: update info of an bill.
      operationId: controllers.bill_api.update_bill_info
      tags:
        - Bill
      parameters:
        - name: bill_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bill_info'
      responses:
        '201':
          description: Updated Successfully
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/bill_info'
        '404':
          description: Bill Not Found
        '400':
          description: Error Bad Request
    delete:
      summary: delete an bill by ID.
      operationId: controllers.bill_api.delete_bill_info
      tags:
        - Bill
      parameters:
        - name: bill_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Deleted Successfully
        '404':
          description: bill Not Found
        '400':
          description: Error Bad Request

components:
  schemas:
    customer_info:
      title: info. of the Customer
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 'Ahmad Ahmad'
          default: 'Customer'
        phone_number:
          type: string
          example: '0596581120'
          default: 'no Phone Number'
    item_info:
      title: info. of the Item
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 'Coffee'
        cost:
          type: number
          format: float
          example: 12.5
      required:
        - name
        - cost
    order_info:
      title: info. of the order
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        employee_id:
          type: integer
          format: int64
          example: 10
        customer_id:
          type: integer
          format: int64
          example: 10
        status:
          type: string
          enum:
            - 'in Progress'
            - 'Ready'
            - 'Canceled'
          example: 'Active'
          default: 'in Progress'
        items_ordered:
          type: array
          items:
            $ref: '#/components/schemas/items_ordered_info'
      required:
        - employee_id
        - customer_id
        - items_ordered
    items_ordered_info:
      title: info. of the Item
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12
        order_id:
          type: integer
          format: int64
          example: 3
        item_id:
          type: integer
          format: int64
          example: 2
        quantity:
          type: integer
          format: int64
          example: 16
        description:
          type: string
          example: 'Coffee'

      required:
        - order_id
        - item_id
        - quantity
    bill_info:
      title: info. of the bill
      type: object
      properties:
        order_id:
          type: integer
          format: int64
          example: 12
        employee_id:
          type: integer
          format: int64
          example: 3
        customer_id:
          type: integer
          format: int64
          example: 2
        total_cost:
          type: number
          format: float
          example: 230.99
        description:
          type: string
          example: 'Take Away'
        order_time:
          type: string
          format: date-time
          example: '2022-08-11 15:39:28.655778'
      required:
        - order_id
        - employee_id
        - customer_id
        - total_cost